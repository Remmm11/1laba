"""Вариант 13.
Нечётные двоичные числа, не привышающие 1024, у которых вторая справа цифра равна 1. Выводит на экран
цифры числа, исключая единицы. Вычисляется среднее число между минимальным и максимальным и выводится прописью. """

m = []
simvols = [' ', '!', '?', '.', ',', '\n', '']
buffer_len = 1  # размер буффера чтения
work_buffer = '' # рабочий буффер


# функция, которая заменяет цифру на слово
def slovo(x):
    z = {'0': 'ноль', '1': 'один', '2': 'два', '3': 'три', '4': 'четыре', '5': 'пять', '6': 'шесть', '7': 'семь',
         '8': 'восемь', '9': 'девять'}
    return z[x]


with open('test.txt') as f: #основной цикл while
    buffer = f.read(buffer_len) # считываем первый символ в буффер
    if not buffer: # проверяем наличие символов в файле
        print('Файл пустой.')
        quit() # Если символов нету, то прерываем выполнение программы
    while buffer: 
        while buffer not in simvols: # Пока не встретили любой символ кроме цифры или буквы добавляем в рабочий буфер символ
            work_buffer += buffer
            buffer = f.read(buffer_len) # считываем новый символ
        if len(work_buffer) > 0:
            flag = True # задаём флаг
            for i in range(len(work_buffer)): 
                if work_buffer[i] != '0' and work_buffer[i] != '1': # проверяем, чтобы все символы в рабочем буфере были '0' или '1'
                    flag = False # иначе флаг принимает значение ложь и мы выходим из цикла
                    break
            if flag and len(work_buffer) > 1:
                # проверяем что число нечётное, вторая справа цифра '1', не начинается на '0' и меньше 1024 в двоичке
                if work_buffer[0] != '0' and work_buffer[-2] == '1' and int(work_buffer) < int(bin(1025)[2::]) and int(work_buffer) % 2 == 1:
                    m += [int(work_buffer)] # если всё правильно, то добавляем в массив
                    l = work_buffer.replace('1', '') # удаляем из числа все '1' и выводим на экран
                    print(f'Вывод: {l}')
        work_buffer = '' # очищаем рабочий буффер
        buffer = f.read(buffer_len) # считываем новый символ

# проверяем что массив не пустой
if m: 
    sred = (max(m) + min(m)) // 2 # находим среднее значение
    k = ''
    for i in range(len(str(sred))):
        g = slovo(str(sred)[i]) # заменяем цифры на слова через функцию
        k += g + ' '
    print(f'Среднее значение: {sred} - {k}.') # выводим на экран
else:
    print('В файле нет подходящих значений.')
